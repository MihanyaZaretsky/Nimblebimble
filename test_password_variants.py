#!/usr/bin/python
import psycopg2

def test_password_variants():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–∞—Ä–æ–ª—è"""
    
    # –í–∞—Ä–∏–∞–Ω—Ç—ã –ø–∞—Ä–æ–ª—è
    passwords = [
        "+\4??w:vDiWSMm",  # –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π
        r"+\4??w:vDiWSMm",  # Raw string
    ]
    
    for i, password in enumerate(passwords, 1):
        try:
            print(f"üîë –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å {i}: {password}")
            
            conn = psycopg2.connect(
                host="5.129.222.183",
                database="default_db",
                user="gen_user",
                password=password
            )
            
            print(f"‚úÖ –ü–∞—Ä–æ–ª—å {i} —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
            cur = conn.cursor()
            cur.execute("SELECT version();")
            version = cur.fetchone()
            print(f"üìä –í–µ—Ä—Å–∏—è PostgreSQL: {version[0]}")
            
            cur.close()
            conn.close()
            
            print(f"üéâ –ü–∞—Ä–æ–ª—å {i} –ø—Ä–æ—à–µ–ª –≤—Å–µ —Ç–µ—Å—Ç—ã!")
            return password
            
        except Exception as e:
            print(f"‚ùå –ü–∞—Ä–æ–ª—å {i} –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {e}")
            print()
    
    print("‚ùå –ù–∏ –æ–¥–∏–Ω –ø–∞—Ä–æ–ª—å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    return None

if __name__ == "__main__":
    working_password = test_password_variants()
    if working_password:
        print(f"\n‚úÖ –†–∞–±–æ—á–∏–π –ø–∞—Ä–æ–ª—å: {working_password}")
    else:
        print("\n‚ùå –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∞—Ä–æ–ª—å –≤ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è") 