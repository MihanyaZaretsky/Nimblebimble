import express from 'express'
import { fileURLToPath } from 'url'
import { dirname, join } from 'path'
import { createServer as createViteServer } from 'vite'
import cors from 'cors'
import dotenv from 'dotenv'

dotenv.config()

const __filename = fileURLToPath(import.meta.url)
const __dirname = dirname(__filename)

const app = express()
const PORT = process.env.PORT || 3000

app.use(express.json());
app.use(cors());

// --- API –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---

// API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞ (–∑–∞–≥–ª—É—à–∫–∞)
app.get("/api/paymentStatus/:userId", (req, res) => {
  const userId = parseInt(req.params.userId);
  
  res.json({ 
    success: true, 
    hasPaid: false, // –í—Å–µ–≥–¥–∞ false, —Ç–∞–∫ –∫–∞–∫ –±–æ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ
    paymentInfo: null,
    userId 
  });
});

// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ (–∑–∞–≥–ª—É—à–∫–∞)
app.get("/api/balance/:userId", (req, res) => {
  const userId = parseInt(req.params.userId);
  
  res.json({ 
    success: true, 
    balance: 0, // –í—Å–µ–≥–¥–∞ 0, —Ç–∞–∫ –∫–∞–∫ –±–æ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ
    userId 
  });
});

// API –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–Ω–≤–æ–π—Å (–∑–∞–≥–ª—É—à–∫–∞)
app.post("/api/createInvoiceLink", async (req, res) => {
  const { payload, currency, prices } = req.body;
  
  console.log("üîµ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–≤–æ–π—Å–∞:", { payload, currency, prices });
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É, —Ç–∞–∫ –∫–∞–∫ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –æ—Ç–¥–µ–ª—å–Ω–æ
  res.status(503).json({ 
    success: false, 
    error: "–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –æ—Ç–¥–µ–ª—å–Ω–æ –Ω–∞ VDS." 
  });
});

// –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –æ–±—Å–ª—É–∂–∏–≤–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
if (process.env.NODE_ENV === 'production') {
  app.use(express.static(join(__dirname, 'dist')))
  app.get('*', (req, res) => {
    // –û—Ç–∫–ª—é—á–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ index.html, —á—Ç–æ–±—ã Telegram Mini App –Ω–µ –¥–µ—Ä–∂–∞–ª —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é
    res.set('Cache-Control', 'no-store, no-cache, must-revalidate, proxy-revalidate')
    res.set('Pragma', 'no-cache')
    res.set('Expires', '0')
    res.set('Surrogate-Control', 'no-store')
    res.sendFile(join(__dirname, 'dist', 'index.html'))
  })
} else {
  // –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º Vite dev server
  const vite = await createViteServer({
    server: { middlewareMode: true },
    appType: 'spa'
  })
  app.use(vite.middlewares)
}

const server = app.listen(PORT, '0.0.0.0', () => {
  console.log(`üöÄ –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`)
  console.log(`üì± URL: http://localhost:${PORT}`)
  console.log(`üåê Timeweb URL: https://mihanyazaretsky-nimblebimble-120c.twc1.net`)
  console.log(`ü§ñ –ë–æ—Ç: –ó–∞–ø—É—â–µ–Ω –æ—Ç–¥–µ–ª—å–Ω–æ –Ω–∞ VDS`)
})

// Graceful shutdown
process.on('SIGTERM', () => {
  console.log('üõë –ü–æ–ª—É—á–µ–Ω SIGTERM, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä...');
  server.close(() => {
    console.log('‚úÖ –í–µ–±-—Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    process.exit(0);
  });
});

process.on('SIGINT', () => {
  console.log('üõë –ü–æ–ª—É—á–µ–Ω SIGINT, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä...');
  server.close(() => {
    console.log('‚úÖ –í–µ–±-—Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    process.exit(0);
  });
}); 