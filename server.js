import express from 'express'
import { fileURLToPath } from 'url'
import { dirname, join } from 'path'
import { createServer as createViteServer } from 'vite'
import TelegramBot from 'node-telegram-bot-api'
import cors from 'cors'
import dotenv from 'dotenv'

dotenv.config()

const __filename = fileURLToPath(import.meta.url)
const __dirname = dirname(__filename)

const app = express()
const PORT = process.env.PORT || 3000

// --- –ü–ª–∞—Ç—ë–∂–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª ---
const TELEGRAM_BOT_TOKEN = process.env.BOT_TOKEN || '8312865169:AAHmI2FODLlt4Qcf2rr6MtRbUcB8fGtlLoU';

if (!TELEGRAM_BOT_TOKEN) {
  console.error('‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!');
  process.exit(1);
}

const bot = new TelegramBot(TELEGRAM_BOT_TOKEN);
const paidUsers = new Map();

app.use(express.json());
app.use(cors());

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
bot.on("pre_checkout_query", (query) => {
  console.log("üîç –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞:", query.id);
  bot.answerPreCheckoutQuery(query.id, true).catch((error) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ answerPreCheckoutQuery:", error);
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
bot.on("message", (msg) => {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
  if (msg.text === '/start') {
    console.log(`üéØ –ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${msg.from.first_name} (ID: ${msg.from.id})`);
    
    const welcomeMessage = `üé∞ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Nimble Roulette!\n\n` +
      `üéÆ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É:\n\n` +
      `üí∞ –ü–æ–ø–æ–ª–Ω—è–π—Ç–µ –±–∞–ª–∞–Ω—Å Stars –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ!`;
    
    const keyboard = {
      inline_keyboard: [[
        {
          text: 'üéÆ –û—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É',
          web_app: { url: 'https://nimblebimble.onrender.com' }
        }
      ]]
    };
    
    bot.sendMessage(msg.chat.id, welcomeMessage, { reply_markup: keyboard })
      .then(() => {
        console.log(`‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${msg.from.first_name}`);
      })
      .catch(error => {
        console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
      });
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π
  if (msg.successful_payment) {
    const userId = msg.from.id;
    const payment = msg.successful_payment;
    
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, payment);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ
    paidUsers.set(userId, {
      chargeId: payment.telegram_payment_charge_id,
      amount: payment.total_amount,
      currency: payment.currency,
      timestamp: Date.now()
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.sendMessage(msg.chat.id, 
      `üéâ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!\n\n` +
      `üí∞ –°—É–º–º–∞: ${payment.total_amount / 100} ${payment.currency}\n` +
      `üí≥ ID –ø–ª–∞—Ç–µ–∂–∞: ${payment.telegram_payment_charge_id}\n\n` +
      `–í–∞—à –±–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω! –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∏–≥—Ä—É.`
    ).catch(error => {
      console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
    });
  }
});

// API –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–Ω–≤–æ–π—Å
app.post("/api/createInvoiceLink", async (req, res) => {
  const { payload, currency, prices } = req.body;
  
  console.log("üîµ –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–≤–æ–π—Å–∞:", { payload, currency, prices });
  
  if (!payload || !currency || !prices || !(prices[0] && prices[0].amount)) {
    return res
      .status(400)
      .json({ success: false, error: "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã." });
  }
  
  const price = prices[0].amount;
  if (typeof price !== "number" || price <= 0) {
    return res.status(400).json({ success: false, error: "–ù–µ–≤–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞." });
  }
  
  const title = `–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ ${price} Stars`;
  const description = `–ü–æ–∫—É–ø–∫–∞ Stars –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ ${price} –µ–¥–∏–Ω–∏—Ü.`;
  const label = `–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ ${price} ${currency}`;
  
  try {
    // –î–ª—è Telegram Stars –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
    const invoiceLink = await bot.createInvoiceLink(
      title,
      description,
      payload,
      TELEGRAM_BOT_TOKEN, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –¥–ª—è Stars
      currency,
      [{ label, amount: price }]
    );
    
    console.log("‚úÖ –ò–Ω–≤–æ–π—Å —Å–æ–∑–¥–∞–Ω:", invoiceLink);
    res.json({ success: true, invoiceLink });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–Ω–≤–æ–π—Å:", error);
    res.status(500).json({ success: false, error: error.message });
  }
});

// API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
app.get("/api/paymentStatus/:userId", (req, res) => {
  const userId = parseInt(req.params.userId);
  const paymentInfo = paidUsers.get(userId);
  
  res.json({ 
    success: true, 
    hasPaid: !!paymentInfo,
    paymentInfo: paymentInfo || null,
    userId 
  });
});

// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
app.get("/api/balance/:userId", (req, res) => {
  const userId = parseInt(req.params.userId);
  const paymentInfo = paidUsers.get(userId);
  
  // –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞: –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–ª–∞—Ç–∏–ª, –¥–∞–µ–º 1000 Stars
  const balance = paymentInfo ? 1000 : 0;
  
  res.json({ 
    success: true, 
    balance,
    userId 
  });
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.startPolling();
console.log("ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω");

// --- –ö–æ–Ω–µ—Ü –ø–ª–∞—Ç—ë–∂–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ ---

// –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –æ–±—Å–ª—É–∂–∏–≤–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
if (process.env.NODE_ENV === 'production') {
  app.use(express.static(join(__dirname, 'dist')))
  app.get('*', (req, res) => {
    res.sendFile(join(__dirname, 'dist', 'index.html'))
  })
} else {
  // –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º Vite dev server
  const vite = await createViteServer({
    server: { middlewareMode: true },
    appType: 'spa'
  })
  app.use(vite.middlewares)
}

app.listen(PORT, '0.0.0.0', () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`)
  console.log(`üì± URL: http://localhost:${PORT}`)
  console.log(`ü§ñ –ë–æ—Ç —Ç–æ–∫–µ–Ω: ${TELEGRAM_BOT_TOKEN ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`)
  console.log(`üí≥ Telegram Stars: ‚úÖ –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞`)
}) 