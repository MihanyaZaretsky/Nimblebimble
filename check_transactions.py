import asyncio
import asyncpg
from config import DB_CONFIG

async def check_transactions():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        
        conn = await asyncpg.connect(
            host=DB_CONFIG['host'],
            port=DB_CONFIG['port'],
            user=DB_CONFIG['user'],
            password=DB_CONFIG['password'],
            database=DB_CONFIG['database']
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = await conn.fetch("SELECT * FROM users ORDER BY created_at DESC LIMIT 10")
        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ({len(users)}):")
        for user in users:
            print(f"  - ID: {user['user_id']}, –ò–º—è: {user['first_name']}, –°–æ–∑–¥–∞–Ω: {user['created_at']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å—ã
        balances = await conn.fetch("SELECT * FROM balances ORDER BY updated_at DESC LIMIT 10")
        print(f"\nüí∞ –ë–∞–ª–∞–Ω—Å—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ({len(balances)}):")
        for balance in balances:
            print(f"  - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {balance['user_id']}, Stars: {balance['stars']}, TON: {balance['ton']}, –û–±–Ω–æ–≤–ª–µ–Ω: {balance['updated_at']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        transactions = await conn.fetch("SELECT * FROM transactions ORDER BY created_at DESC LIMIT 10")
        print(f"\nüìä –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ({len(transactions)}):")
        for tx in transactions:
            print(f"  - ID: {tx['id']}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {tx['user_id']}, –¢–∏–ø: {tx['type']}, –í–∞–ª—é—Ç–∞: {tx['currency']}, –°—É–º–º–∞: {tx['amount']}, –°—Ç–∞—Ç—É—Å: {tx['status']}, –°–æ–∑–¥–∞–Ω–∞: {tx['created_at']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id = 2029065770
        user_balance = await conn.fetchrow("SELECT * FROM balances WHERE user_id = $1", user_id)
        if user_balance:
            print(f"\nüéØ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:")
            print(f"  - Stars: {user_balance['stars']}")
            print(f"  - TON: {user_balance['ton']}")
            print(f"  - –û–±–Ω–æ–≤–ª–µ–Ω: {user_balance['updated_at']}")
        else:
            print(f"\n‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        
        user_transactions = await conn.fetch("SELECT * FROM transactions WHERE user_id = $1 ORDER BY created_at DESC", user_id)
        print(f"\nüìà –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} ({len(user_transactions)}):")
        for tx in user_transactions:
            print(f"  - {tx['created_at']}: {tx['type']} {tx['amount']} {tx['currency']} (—Å—Ç–∞—Ç—É—Å: {tx['status']})")
        
        await conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(check_transactions()) 