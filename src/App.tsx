import React, { useEffect, useState } from 'react'
import './App.css'

// –¢–∏–ø—ã –¥–ª—è Telegram Web App
declare global {
  interface Window {
    Telegram?: {
      WebApp: {
        ready: () => void
        initDataUnsafe?: {
          user?: {
            id: number
            first_name: string
            username?: string
            photo_url?: string
          }
        }
      }
    }
  }
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–∫
const HomeTab = ({ user }: { user: any }) => (
  <div className="tab-content">
    <div className="welcome-box">
      <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h2>
      <p>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã</p>
    </div>
    
    <div className="action-buttons">
      <button className="action-btn">
        <span className="btn-icon">üì¶</span>
        <span>–û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å</span>
      </button>
      <button className="action-btn">
        <span className="btn-icon">üíé</span>
        <span>–ü–æ–ø–æ–ª–Ω–∏—Ç—å</span>
      </button>
    </div>
  </div>
)

const CasesTab = () => (
  <div className="tab-content">
    <h2 className="section-title">–ö–µ–π—Å—ã</h2>
    
    <div className="cases-grid">
      <div className="case-card">
        <div className="case-icon">üü¢</div>
        <h3>–û–±—ã—á–Ω—ã–π –∫–µ–π—Å</h3>
        <p>–¶–µ–Ω–∞: 100 üí∞</p>
        <button className="open-btn">–û—Ç–∫—Ä—ã—Ç—å</button>
      </div>
      
      <div className="case-card">
        <div className="case-icon">üîµ</div>
        <h3>–†–µ–¥–∫–∏–π –∫–µ–π—Å</h3>
        <p>–¶–µ–Ω–∞: 500 üí∞</p>
        <button className="open-btn">–û—Ç–∫—Ä—ã—Ç—å</button>
      </div>
      
      <div className="case-card">
        <div className="case-icon">üü£</div>
        <h3>–≠–ø–∏—á–µ—Å–∫–∏–π –∫–µ–π—Å</h3>
        <p>–¶–µ–Ω–∞: 1000 üí∞</p>
        <button className="open-btn">–û—Ç–∫—Ä—ã—Ç—å</button>
      </div>
      
      <div className="case-card">
        <div className="case-icon">üü†</div>
        <h3>–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –∫–µ–π—Å</h3>
        <p>–¶–µ–Ω–∞: 5000 üí∞</p>
        <button className="open-btn">–û—Ç–∫—Ä—ã—Ç—å</button>
      </div>
    </div>
  </div>
)

const TopUpTab = () => (
  <div className="tab-content">
    <div className="topup-header">
      <span className="header-icon">üí∞</span>
      <span>–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å</span>
    </div>
    
    <div className="payment-methods">
      <div className="payment-card">
        <div className="payment-icon">üíé</div>
        <h3>TON</h3>
        <p>–ë—ã—Å—Ç—Ä–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ</p>
      </div>
      
      <div className="payment-card">
        <div className="payment-icon">‚≠ê</div>
        <h3>–ó–≤—ë–∑–¥—ã</h3>
        <p>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ó–≤—ë–∑–¥—ã</p>
      </div>
    </div>
    
    <div className="amount-input">
      <input type="number" placeholder="1" defaultValue="1" />
    </div>
    
    <button className="topup-btn">
      <span className="btn-icon">‚ûï</span>
      <span>–ü–æ–ø–æ–ª–Ω–∏—Ç—å</span>
    </button>
  </div>
)

const UpgradeTab = () => (
  <div className="tab-content">
    <h2 className="section-title">–£–ª—É—á—à–µ–Ω–∏—è</h2>
    <p className="coming-soon">–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —É–ª—É—á—à–µ–Ω–∏—è</p>
  </div>
)

const ProfileTab = ({ user }: { user: any }) => (
  <div className="tab-content">
    <div className="profile-section">
      <div className="profile-avatar">
        {user?.photo_url ? (
          <img src={user.photo_url} alt="Profile" />
        ) : (
          <div className="default-avatar">üë§</div>
        )}
      </div>
      
      <h2 className="username">{user?.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</h2>
      <p className="user-handle">@{user?.username || 'username'}</p>
      <p className="user-id">ID: {user?.id || '0000000000'}</p>
    </div>
    
    <div className="stats-grid">
      <div className="stat-card">
        <h3>–ë–∞–ª–∞–Ω—Å</h3>
        <p>0.00 üíé</p>
      </div>
      <div className="stat-card">
        <h3>–û—Ç–∫—Ä—ã—Ç–æ –∫–µ–π—Å–æ–≤</h3>
        <p>0 üì¶</p>
      </div>
    </div>
    
    <div className="language-section">
      <h3>–Ø–∑—ã–∫</h3>
      <div className="language-buttons">
        <button className="lang-btn active">üåê –†—É—Å—Å–∫–∏–π</button>
        <button className="lang-btn">üåê English</button>
      </div>
    </div>
  </div>
)

function App() {
  const [user, setUser] = useState<any>(null)
  const [activeTab, setActiveTab] = useState('home')
  const [balance, setBalance] = useState({ ton: 0, stars: 0 })

  useEffect(() => {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –≤ Telegram
    const isTelegram = window.Telegram && window.Telegram.WebApp
    console.log('üì± –ó–∞–ø—É—â–µ–Ω–æ –≤ Telegram:', !!isTelegram)
    
    if (isTelegram) {
      try {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram Web App
        window.Telegram.WebApp.ready()
        console.log('‚úÖ Telegram Web App –≥–æ—Ç–æ–≤')
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const tgUser = window.Telegram.WebApp.initDataUnsafe?.user
        if (tgUser) {
          setUser(tgUser)
          console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Telegram:', tgUser)
        }
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram:', error)
      }
    } else {
      console.log('üåê –ó–∞–ø—É—â–µ–Ω–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ')
    }
  }, [])

  const renderTabContent = () => {
    switch (activeTab) {
      case 'home':
        return <HomeTab user={user} />
      case 'cases':
        return <CasesTab />
      case 'topup':
        return <TopUpTab />
      case 'upgrade':
        return <UpgradeTab />
      case 'profile':
        return <ProfileTab user={user} />
      default:
        return <HomeTab user={user} />
    }
  }

  return (
    <div className="app">
      {/* Header */}
      <div className="header">
        <div className="header-left">
          <button className="close-btn">‚úï</button>
        </div>
        <div className="header-center">
          <h1>Nimble Roulette</h1>
        </div>
        <div className="header-right">
          <button className="menu-btn">‚ãÆ</button>
        </div>
      </div>

      {/* Balance Bar */}
      <div className="balance-bar">
        <div className="balance-item">
          <span className="balance-icon">üíé</span>
          <span className="balance-amount">{balance.ton.toFixed(2)}</span>
        </div>
        <div className="balance-item">
          <span className="balance-icon">‚≠ê</span>
          <span className="balance-amount">{balance.stars}</span>
        </div>
        <button className="connect-btn">
          <span className="btn-icon">üîå</span>
          <span>–ü–æ–¥–∫–ª—é—á–∏—Ç—å</span>
        </button>
        <div className="user-avatar">
          {user?.photo_url ? (
            <img src={user.photo_url} alt="Avatar" />
          ) : (
            <div className="default-avatar">üë§</div>
          )}
        </div>
      </div>

      {/* Main Content */}
      <div className="main-content">
        {renderTabContent()}
      </div>

      {/* Bottom Navigation */}
      <div className="bottom-nav">
        <button 
          className={`nav-btn ${activeTab === 'home' ? 'active' : ''}`}
          onClick={() => setActiveTab('home')}
        >
          <span className="nav-icon">üè†</span>
          <span>–ì–ª–∞–≤–Ω–∞—è</span>
        </button>
        
        <button 
          className={`nav-btn ${activeTab === 'cases' ? 'active' : ''}`}
          onClick={() => setActiveTab('cases')}
        >
          <span className="nav-icon">üì¶</span>
          <span>–ö–µ–π—Å—ã</span>
        </button>
        
        <button 
          className={`nav-btn primary ${activeTab === 'topup' ? 'active' : ''}`}
          onClick={() => setActiveTab('topup')}
        >
          <span className="nav-icon">‚ûï</span>
          <span>–ü–æ–ø–æ–ª–Ω–∏—Ç—å</span>
        </button>
        
        <button 
          className={`nav-btn ${activeTab === 'upgrade' ? 'active' : ''}`}
          onClick={() => setActiveTab('upgrade')}
        >
          <span className="nav-icon">üìà</span>
          <span>–£–ª—É—á—à–∏—Ç—å</span>
        </button>
        
        <button 
          className={`nav-btn ${activeTab === 'profile' ? 'active' : ''}`}
          onClick={() => setActiveTab('profile')}
        >
          <span className="nav-icon">üë§</span>
          <span>–ü—Ä–æ—Ñ–∏–ª—å</span>
        </button>
      </div>
    </div>
  )
}

export default App 